import{e as t,O as e,h as i,Q as a,as as r,a9 as s,bj as n}from"./index-B6_tP4YQ.js";const o=async(o,w,l={},m={})=>{const{collectionName:u="usage_metadata",writeLimit:c=100,minuteLimit:h=8,hourLimit:W=40,dayLimit:d=150}=m,f=Date.now(),y=36e5,C=3e5,T=432e5,_=864e5,$=t(e,u,o);try{const m=await i($),u=`${w}_minuteWriteCount`,g=`${w}_minuteResetTime`,E=`${w}_hourWriteCount`,j=`${w}_hourResetTime`,L=`${w}_dayWriteCount`,b=`${w}_dayResetTime`;if(m.exists()){const t=m.data(),e={};"resetTime"in t||(e.resetTime=f+y),"writeCount"in t||(e.writeCount=0),u in t||(e[u]=0),g in t||(e[g]=f+C),E in t||(e[E]=0),j in t||(e[j]=f+T),L in t||(e[L]=0),b in t||(e[b]=f+_),Object.keys(e).length>0&&await s($,e);const a=(await i($)).data();if(f>a.resetTime)await s($,{writeCount:1,resetTime:f+y,lastWrite:r()});else{if(!(a.writeCount<c))throw new Error("Write limit reached. Try again later.");await s($,{writeCount:n(1),lastWrite:r()})}if(f>a[g])await s($,{[u]:1,[g]:f+C,lastWrite:r()});else{if(!(a[u]<h))throw new Error("Minute limit reached. Please wait 5 minutes.");await s($,{[u]:n(1),lastWrite:r()})}if(f>a[j])await s($,{[E]:1,[j]:f+T,lastWrite:r()});else{if(!(a[E]<W))throw new Error("Hour limit reached. Please wait.");await s($,{[E]:n(1),lastWrite:r()})}if(f>a[b])await s($,{[L]:1,[b]:f+_,lastWrite:r()});else{if(!(a[L]<d))throw new Error("Daily limit reached. Please wait.");await s($,{[L]:n(1),lastWrite:r()})}}else await a($,{writeCount:1,resetTime:f+y,[u]:1,[g]:f+C,[E]:1,[j]:f+T,[L]:1,[b]:f+_,lastWrite:r()});if(Object.keys(l).length>0){const i=t(e,"user_data",o);await s(i,l)}}catch(g){throw new Error(g.message)}};export{o as h};
